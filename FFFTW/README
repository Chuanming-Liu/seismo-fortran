FFFTW
=====
Andy Nowacki
andy.nowacki@bristol.ac.uk


Introduction
------------
FFFTW is a wrapper Fortran 2003 module which provides a friendly interface
to the FFTW3 functions.  Because they are in C, and Fortran 2003 provides
a C binding module, we can be sure of a few things (such as the size of reals
vs. float, etc.) which make it more portable.


Why call the routines directly when the old interface worked fine?
------------------------------------------------------------------
FFTW3 already provides a legacy (F77) interface which you can call; but you
still need to remember certain things (the size of the F-domain trace you get,
and so on).  FFFTW removes all that and allows you to just call FFFTW_fwd()
or FFFTW_rev()--that's it.  The trace is allocated automatically.


How to use FFFTW
----------------
    ! Use the FFFTW module.
	use FFFTW

	! The size of the time-domain array...
	integer, parameter :: npts = 1024
	integer :: i

    ! Time-domain array
	real :: real_trace(npts) ! Or you can use an allocatable array

	! Declare the FFT array with the same precision as the time-domain trace
    complex, allocatable, pointer :: complex_trace(:)

    ! Fill real_trace in with data
	real_trace = (sin(0.001*i), i=1,npts)

	! Perform the FFT--complex_trace holds the FFT, and is allocated to the right
	! size automatically.  It is reallocated if it's already allocated, but to the
	! wrong size.
    call FFFTW_fwd(real_trace, complex_trace)

	! You can do what you like to the frequency-domain trace (filter, etc.), then
	! convert back to the time domain.  (NB: complex_trace is destroyed in the
	! inverse transform, so copy it elsewhere if you need it later.)
	call FFFTW_rev(complex_trace, real_trace)
